namespace Saydummy =
    public function dummy() : bool =
        true

contract OracleConnector =
    entrypoint createOracle : (bytes(32)) => bytes(32)
    payable entrypoint query: (string, bytes(32)) => bytes(32)
    entrypoint canCallBack: () => bool
    entrypoint getBaseFee: () => int

contract OracleAddressResolver =
    entrypoint getAddress : () => address

namespace Say =

    record setup = {
        oracle_address: OracleAddressResolver,
        oracle_connector: OracleConnector
      }
    public function set() : setup =
        let _oracle_address : OracleAddressResolver = ct_xRAL2ZaqffbTAeQrAunrR8jxdg9YbJvuEnFFJC8g8oW4LJ7Um
        let _oracle_connector : OracleConnector = Address.to_contract(_oracle_address.getAddress())
        
        {oracle_address = _oracle_address, oracle_connector = _oracle_connector}
    
    public function getOracleAddress() : address =
        set().oracle_address.getAddress()

    public function canCallBack() : bool =
        set().oracle_connector.canCallBack()
    
    public function getBaseFee() : int =
        set().oracle_connector.getBaseFee()

    stateful function query(args: string, oracle_id: bytes(32), value_received: int) : bytes(32) =
        set().oracle_connector.query(args, oracle_id, value = value_received)

    public function createOracle(oracle_name: bytes(32)) : bytes(32) =
        set().oracle_connector.createOracle(oracle_name)


contract Boolean =
  record boolean = {
    ok: bool
   }