namespace Saydummy =
    public function dummy() : bool =
        true

contract OracleConnector =
    entrypoint createOracle : (bytes(32)) => oracle(string, string)
    entrypoint query: (string, bytes(32)) => oracle_query(string, string)
    entrypoint canCallBack: () => bool

contract OracleAddressResolver =
    entrypoint getAddress : () => address

namespace Say =

    record init = {
        oracle_address: OracleAddressResolver,
        oracle_connector: OracleConnector
      }
    public function set() : init =
        let addresses : init = {oracle_address = ct_xRAL2ZaqffbTAeQrAunrR8jxdg9YbJvuEnFFJC8g8oW4LJ7Um,
                              oracle_connector = Address.to_contract(getOracleAddress()) }
        addresses
    public function getOracleAddress() : address =
        set().oracle_address.getAddress()

    public function canCallBack() : bool =
        set().oracle_connector.canCallBack()

    public function query(args: string, oracle_id: bytes(32)) : oracle_query(string, string) =
        set().oracle_connector.query(args, oracle_id)

    public function createOracle(oracle_name: bytes(32)) : oracle(string, string) =
        set().oracle_connector.createOracle(oracle_name)



contract Boolean =
  record boolean = {
    ok: bool
   }